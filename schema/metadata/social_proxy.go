// Code generated by "enumer --values --type=SocialProxyAction --transform=snake --trimprefix=ActionSocialProxy --output social_proxy.go --json --sql"; DO NOT EDIT.

package metadata

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"strings"
)

const _SocialProxyActionName = "appointremove"

var _SocialProxyActionIndex = [...]uint8{0, 7, 13}

const _SocialProxyActionLowerName = "appointremove"

func (i SocialProxyAction) String() string {
	i -= 1
	if i >= SocialProxyAction(len(_SocialProxyActionIndex)-1) {
		return fmt.Sprintf("SocialProxyAction(%d)", i+1)
	}
	return _SocialProxyActionName[_SocialProxyActionIndex[i]:_SocialProxyActionIndex[i+1]]
}

func (SocialProxyAction) Values() []string {
	return SocialProxyActionStrings()
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SocialProxyActionNoOp() {
	var x [1]struct{}
	_ = x[ActionSocialProxyAppoint-(1)]
	_ = x[ActionSocialProxyRemove-(2)]
}

var _SocialProxyActionValues = []SocialProxyAction{ActionSocialProxyAppoint, ActionSocialProxyRemove}

var _SocialProxyActionNameToValueMap = map[string]SocialProxyAction{
	_SocialProxyActionName[0:7]:       ActionSocialProxyAppoint,
	_SocialProxyActionLowerName[0:7]:  ActionSocialProxyAppoint,
	_SocialProxyActionName[7:13]:      ActionSocialProxyRemove,
	_SocialProxyActionLowerName[7:13]: ActionSocialProxyRemove,
}

var _SocialProxyActionNames = []string{
	_SocialProxyActionName[0:7],
	_SocialProxyActionName[7:13],
}

// SocialProxyActionString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SocialProxyActionString(s string) (SocialProxyAction, error) {
	if val, ok := _SocialProxyActionNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SocialProxyActionNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SocialProxyAction values", s)
}

// SocialProxyActionValues returns all values of the enum
func SocialProxyActionValues() []SocialProxyAction {
	return _SocialProxyActionValues
}

// SocialProxyActionStrings returns a slice of all String values of the enum
func SocialProxyActionStrings() []string {
	strs := make([]string, len(_SocialProxyActionNames))
	copy(strs, _SocialProxyActionNames)
	return strs
}

// IsASocialProxyAction returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SocialProxyAction) IsASocialProxyAction() bool {
	for _, v := range _SocialProxyActionValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for SocialProxyAction
func (i SocialProxyAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for SocialProxyAction
func (i *SocialProxyAction) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("SocialProxyAction should be a string, got %s", data)
	}

	var err error
	*i, err = SocialProxyActionString(s)
	return err
}

func (i SocialProxyAction) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *SocialProxyAction) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	var str string
	switch v := value.(type) {
	case []byte:
		str = string(v)
	case string:
		str = v
	case fmt.Stringer:
		str = v.String()
	default:
		return fmt.Errorf("invalid value of SocialProxyAction: %[1]T(%[1]v)", value)
	}

	val, err := SocialProxyActionString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
